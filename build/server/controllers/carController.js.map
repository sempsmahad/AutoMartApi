{"version":3,"sources":["../../../api/server/controllers/carController.js"],"names":["util","Util","carModel","Car","CarController","req","res","getAllCars","allCars","length","setSuccess","send","setError","getAllStateCars","allStateCars","maxPrice","params","max_price","minPrice","min_price","getAllRangeCars","allCarsInRange","getAllAdminCars","allAdminCars","getAllBodyTypeCars","body","title","price","description","newCar","addCar","createdCar","message","id","Number","markAsSold","updatedCar","updatePrice","alteredBook","updateBook","getACar","theCar","deleteCar","deletedCar"],"mappings":"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","sourcesContent":["import Car from '../src/models/car';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\nconst carModel = new Car();\n\nclass CarController {\n  static async getAllCars(req, res) {\n    try {\n      const allCars = await carModel.getAllCars();\n      if (allCars.length > 0) {\n        util.setSuccess(200, 'Cars retrieved', allCars);\n      } else {\n        util.setSuccess(200, 'No car found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAllStateCars(req, res) {\n    try {\n      const allStateCars = await carModel.getAllStateCars();\n      if (allStateCars.length > 0) {\n        util.setSuccess(200, 'Cars retrieved', allStateCars);\n      } else {\n        util.setSuccess(200, 'No car found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAllRangeCars(req, res) {\n    try {\n      const maxPrice = req.params.max_price;\n      const minPrice = req.params.min_price;\n      const allCarsInRange = await carModel.getAllRangeCars(maxPrice, minPrice);\n      if (allCarsInRange.length > 0) {\n        util.setSuccess(200, 'Cars retrieved', allCarsInRange);\n      } else {\n        util.setSuccess(200, 'No cars found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAllAdminCars(req, res) {\n    try {\n      const allAdminCars = await carModel.getAllAdminCars();\n      if (allAdminCars.length > 0) {\n        util.setSuccess(200, 'Cars retrieved', allAdminCars);\n      } else {\n        util.setSuccess(200, 'No car found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAllBodyTypeCars(req, res) {\n    try {\n      const allCars = await carModel.getAllBodyTypeCars();\n      if (allCars.length > 0) {\n        util.setSuccess(200, 'Cars retrieved', allCars);\n      } else {\n        util.setSuccess(200, 'No car found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addCar(req, res) {\n    if (!req.body.title || !req.body.price || !req.body.description) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newCar = req.body;\n    try {\n      const createdCar = await carModel.addCar(newCar);\n      util.setSuccess(201, 'Car Added!', createdCar);\n      return util.send(res);\n    } catch (error) {\n      util.setError(401, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async markAsSold(req, res) {\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updatedCar = await carModel.markAsSold(id);\n      if (!updatedCar) {\n        util.setError(401, `Cannot find car with the id: ${id}`);\n      } else {\n        util.setSuccess(201, 'car status updated', updatedCar);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(401, error);\n      return util.send(res);\n    }\n  }\n\n  static async updatePrice(req, res) {\n    const { id, price } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updatedCar = await carModel.updatePrice(id, price);\n      if (!updatedCar) {\n        util.setError(401, `Cannot find car with the id: ${id}`);\n      } else {\n        util.setSuccess(201, 'car status updated', updatedCar);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(401, error);\n      return util.send(res);\n    }\n  }\n\n  static async updateCar(req, res) {\n    const alteredBook = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateBook = await carModel.updateBook(id, alteredBook);\n      if (!updateBook) {\n        util.setError(404, `Cannot find book with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Book updated', updateBook);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getACar(req, res) {\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const theCar = await carModel.getACar(id);\n      if (!theCar) {\n        util.setError(400, `Cannot find car with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found it', theCar);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteCar(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const deletedCar = await carModel.deleteCar(id);\n\n      if (deletedCar) {\n        util.setSuccess(200, 'Car deleted');\n      } else {\n        util.setError(404, `Car with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default CarController;\n"],"file":"carController.js"}