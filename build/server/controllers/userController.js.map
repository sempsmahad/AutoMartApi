{"version":3,"sources":["../../../api/server/controllers/userController.js"],"names":["util","Util","UserModel","User","userController","req","res","checkUser","body","email","user","setSuccess","setError","send","first_name","last_name","password","address","newUser","addUser","createdUser","console","log","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;AACA,IAAMC,SAAS,GAAG,IAAIC,gBAAJ,EAAlB;;IAEMC,c;;;;;;;;;;;;oDACmBC,G,EAAKC,G;;;;;;;;uBAELJ,SAAS,CAACK,SAAV,CAAoBF,GAAG,CAACG,IAAJ,CAASC,KAA7B,C;;;AAAbC,gBAAAA,I;;AACN,oBAAIA,IAAJ,EAAU;AACRV,kBAAAA,IAAI,CAACW,UAAL,CAAgB,GAAhB,EAAqB,aAArB,EAAoCD,IAApC;AACD,iBAFD,MAEO;AACLV,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAmB,wCAAnB;AACD;;iDACMZ,IAAI,CAACa,IAAL,CAAUP,GAAV,C;;;;;AAEPN,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;iDACOZ,IAAI,CAACa,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAIUD,G,EAAKC,G;;;;;;sBAEtB,CAACD,GAAG,CAACG,IAAJ,CAASC,KAAV,IACG,CAACJ,GAAG,CAACG,IAAJ,CAASM,UADb,IAEG,CAACT,GAAG,CAACG,IAAJ,CAASO,SAFb,IAGG,CAACV,GAAG,CAACG,IAAJ,CAASQ,QAHb,IAIG,CAACX,GAAG,CAACG,IAAJ,CAASS,O;;;;;AAEbjB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAmB,iCAAnB;kDACOZ,IAAI,CAACa,IAAL,CAAUP,GAAV,C;;;AAEHY,gBAAAA,O,GAAUb,GAAG,CAACG,I;;;uBAIQN,SAAS,CAACiB,OAAV,CAAkBD,OAAlB,C;;;AAApBE,gBAAAA,W;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACApB,gBAAAA,IAAI,CAACW,UAAL,CAAgB,GAAhB,EAAqB,kCAArB,EAAyDS,WAAzD;kDACOpB,IAAI,CAACa,IAAL,CAAUP,GAAV,C;;;;;AAEPN,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAmB,aAAMW,OAAzB;kDACOvB,IAAI,CAACa,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;;;;;;;eAKEF,c","sourcesContent":["import User from '../src/models/user';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\nconst UserModel = new User();\n\nclass userController {\n  static async checkUser(req, res) {\n    try {\n      const user = await UserModel.checkUser(req.body.email);\n      if (user) {\n        util.setSuccess(200, 'user exists', user);\n      } else {\n        util.setError(400, 'user not found Try creating an Account');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addUser(req, res) {\n    if (\n      !req.body.email\n      || !req.body.first_name\n      || !req.body.last_name\n      || !req.body.password\n      || !req.body.address\n    ) {\n      util.setError(401, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newUser = req.body;\n\n    try {\n      // console.log(newUser);\n      const createdUser = await UserModel.addUser(newUser);\n      console.log(createdUser);\n      util.setSuccess(201, 'successfully created new account', createdUser);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n}\n\nexport default userController;\n"],"file":"userController.js"}